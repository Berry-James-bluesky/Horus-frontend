[{"/Users/jamesberry/PhpstormProjects/horus-frontend/src/index.tsx":"1","/Users/jamesberry/PhpstormProjects/horus-frontend/src/reportWebVitals.ts":"2","/Users/jamesberry/PhpstormProjects/horus-frontend/src/App.tsx":"3","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/PageHeader.tsx":"4","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerDashboard.tsx":"5","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerContainer.tsx":"6","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerControl.tsx":"7","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerCreate.tsx":"8","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Timer.tsx":"9","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/AddButton.tsx":"10","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Statistics.tsx":"11","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Dashboard.tsx":"12","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Help.tsx":"13","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Settings.tsx":"14","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/BarGraph.tsx":"15","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/NotFound.tsx":"16","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/modal/EditModal.tsx":"17","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/notify/Notify.tsx":"18","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimeTracker.tsx":"19","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/FilterContainer.tsx":"20","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/Filter.tsx":"21","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/StyleSelect.tsx":"22","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/ActiveTimer.tsx":"23","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartFilter.tsx":"24","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartView.tsx":"25","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Sidebar.tsx":"26","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/SidebarItem.tsx":"27","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Profile.tsx":"28","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerObj.tsx":"29","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/API.ts":"30","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Clock.tsx":"31","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/PieGraph.tsx":"32"},{"size":543,"mtime":1611882451964,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1611882268898,"results":"35","hashOfConfig":"34"},{"size":1222,"mtime":1613529124535,"results":"36","hashOfConfig":"34"},{"size":926,"mtime":1612919005335,"results":"37","hashOfConfig":"34"},{"size":638,"mtime":1613465226933,"results":"38","hashOfConfig":"34"},{"size":2724,"mtime":1613612273846,"results":"39","hashOfConfig":"34"},{"size":329,"mtime":1613128087804,"results":"40","hashOfConfig":"34"},{"size":3093,"mtime":1613463799725,"results":"41","hashOfConfig":"34"},{"size":1054,"mtime":1613371752006,"results":"42","hashOfConfig":"34"},{"size":743,"mtime":1613463557075,"results":"43","hashOfConfig":"34"},{"size":2463,"mtime":1613612273847,"results":"44","hashOfConfig":"34"},{"size":239,"mtime":1613373392946,"results":"45","hashOfConfig":"34"},{"size":349,"mtime":1613129639429,"results":"46","hashOfConfig":"34"},{"size":122,"mtime":1612409037806,"results":"47","hashOfConfig":"34"},{"size":451,"mtime":1613370722870,"results":"48","hashOfConfig":"34"},{"size":387,"mtime":1613129498384,"results":"49","hashOfConfig":"34"},{"size":1419,"mtime":1613373199645,"results":"50","hashOfConfig":"34"},{"size":1159,"mtime":1613462493476,"results":"51","hashOfConfig":"34"},{"size":397,"mtime":1613463853204,"results":"52","hashOfConfig":"34"},{"size":1321,"mtime":1613611165385,"results":"53","hashOfConfig":"34"},{"size":5679,"mtime":1613612273846,"results":"54","hashOfConfig":"34"},{"size":560,"mtime":1612501713788,"results":"55","hashOfConfig":"34"},{"size":370,"mtime":1613539936525,"results":"56","hashOfConfig":"34"},{"size":673,"mtime":1613368249002,"results":"57","hashOfConfig":"34"},{"size":431,"mtime":1612930159235,"results":"58","hashOfConfig":"34"},{"size":1722,"mtime":1613462665831,"results":"59","hashOfConfig":"34"},{"size":1201,"mtime":1613462855829,"results":"60","hashOfConfig":"34"},{"size":687,"mtime":1613462576932,"results":"61","hashOfConfig":"34"},{"size":1453,"mtime":1613539957535,"results":"62","hashOfConfig":"34"},{"size":949,"mtime":1613531473711,"results":"63","hashOfConfig":"34"},{"size":647,"mtime":1613612273845,"results":"64","hashOfConfig":"34"},{"size":430,"mtime":1613612273844,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ourz6o",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},"/Users/jamesberry/PhpstormProjects/horus-frontend/src/index.tsx",[],["141","142"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/reportWebVitals.ts",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/App.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/PageHeader.tsx",[],["143","144"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerDashboard.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerContainer.tsx",["145","146","147"],"import React, { useState, useEffect } from 'react';\nimport { TimerObj } from './TimerObj';\nimport './TimerContainer.scss';\nimport test from '../../test.json';\nimport { getTimers } from '../API';\nimport Select from 'react-select';\nimport { useBetween } from 'use-between';\n\n/**\n *\n * Contains timerObjs as direct children (currently being rendered from test data @ test.json)\n *\n * Card/list style defined by React-select dropdown box\n *\n * @constructor\n */\n\ninterface timerDataType {\n    data: Array<object>\n}\n\n\nconst useTimerState = () => {\n    const [timerModel, setModel] = useState<Array<timerDataType>>([]);\n    const [timerView, setView] = useState<Array<timerDataType>>([]);\n    const setTimerModel = (value: any) => {setModel(value);} \n    const setTimerView = (value: any) => {setView(value)}\n    return ({timerModel, setTimerModel, timerView, setTimerView});\n}\n\n\n  export const useSharedTimerState = () => useBetween(useTimerState);\n\nconst TimerContainer: React.FC = () => {\n\n    // set states\n    const [styleValue, setStyleValue] = useState('card');\n    // const [fetchedTimers, setFetchedTimers] = useState<Array<timerDataType>>([]);\n    const {timerModel, setTimerModel, timerView, setTimerView} = useSharedTimerState();\n\n    /**\n     * @function\n     * Get all stored timers from DB\n     */\n    \n\n    useEffect(() => {\n        getTimers()\n            .then(timers => {\n                // @ts-ignore\n                setTimerModel(timers.data)\n                console.log(timerModel)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        setTimerView(timerModel);\n    }, [timerModel])\n\n    // Define options for react-select dropdown\n    const styleOptions = [\n        {\n            'value': 'card',\n            'label': 'Card',\n        },\n        {\n            'value': 'list',\n            'label': 'List',\n        }\n    ];\n\n    // change styleValue state on react-select option change\n    const handleChange = (e: any) => {\n        setStyleValue(e.value)\n    }\n\n        return (\n            <>\n                <Select options={styleOptions} onChange={handleChange} className='w-50 float-right m-8 mt-0'/>\n                <div className={`timer-container ${styleValue}-container`}>\n                    {timerView.map((data: any) =>\n                        <TimerObj\n                            key={data.name}\n                            timerName={data.name}\n                            timerClient={data.client}\n                            timerProject={data.project}\n                            timerStyle={styleValue}\n                            timerDate={data.time}\n                        />\n                    )}\n\n                </div>\n            </>\n\n        )\n\n}\n\nexport default TimerContainer","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerControl.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerCreate.tsx",["148"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Timer.tsx",["149","150"],"import React from 'react';\nimport { Card, Button } from 'semantic-ui-react'\nimport { EditModal } from '../modal/EditModal';\nimport { ActiveTimer } from '../timer/ActiveTimer';\nimport './Timer.scss';\n\ninterface Props {\n    name: string\n    project: string\n    client: string\n    assignedTo: string\n    billable: boolean\n}\n\nconst Timer = (props: any) => {\n\n    return(\n        <Card className={'timer' + ' ' + props.styleType + '-item'}>\n            <Card.Content header={props.name} />\n            <Card.Content>\n                <Card.Description>{props.project}, {props.client}</Card.Description>\n            </Card.Content>\n            <Card.Content>\n                <ActiveTimer />\n            </Card.Content>\n            <Card.Content>\n                <EditModal timerName={props.name} assignedUser={props.assignedTo} billable={props.billable}/>\n                <Button>Stop Timer</Button>\n            </Card.Content>\n        </Card>\n    )\n\n}\n\nexport default Timer",["151","152"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/AddButton.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Statistics.tsx",["153"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Dashboard.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Help.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Settings.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/BarGraph.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/NotFound.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/modal/EditModal.tsx",["154","155"],"import React from 'react';\nimport {Button, Card, Header, Icon, Image, Modal, Checkbox} from 'semantic-ui-react'\nimport './EditModal.scss';\n\ninterface Props {\n    timerName: string\n    assignedUser: string\n    billable: boolean\n}\n\nexport const EditModal: React.FC<Props> = (props: any) => {\n\n    const [open, setOpen] = React.useState(false)\n\n    return(\n        <Modal\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Icon name='edit' size='large' className='edit-icon'/>}\n        >\n            <Modal.Header>Edit '{props.timerName}'</Modal.Header>\n            <Modal.Content>\n                <Modal.Description>\n                    <Header>Assigned to</Header>\n                    <p>\n                        {props.assignedUser}\n                    </p>\n                    <Header>Billable</Header>\n                    <Checkbox checked={props.billable}></Checkbox>\n                </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='black' onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button\n                    content=\"Confirm changes\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => setOpen(false)}\n                    positive\n                />\n            </Modal.Actions>\n        </Modal>\n    )\n}","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/notify/Notify.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimeTracker.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/FilterContainer.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/Filter.tsx",["156","157","158","159","160"],"import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport test from '../../../test.json';\nimport {useSharedTimerState} from '../TimerContainer'\nimport { useSharedFilterState } from './FilterContainer';\n\n/**\n * Multi-use dropdown-style filter powered by { react-select }\n * --\n * Filter types:\n * - Project Name\n * - User\n * - Client\n *\n * Filter type is determined by passed prop filterType\n */\n\ninterface Props {\n    isType: string\n    /** type of filter to be displayed */\n}\n\nexport const Filter: React.FC<Props> = (props: Props) => {\n\n    const {timerModel, setTimerModel, timerView, setTimerView} = useSharedTimerState();\n\n    const [filterType, setFilterType] = useState(props.isType)\n    /** value is set by props.isType */\n\n    let filterOptionsArray: Array<object> = [];\n\n    const [filterOptions, setFilterOptions]: any = useState(null);\n\n    const {filterParams, setFilterParams} = useSharedFilterState();\n\n    const [selectedOption, setSelectedOption]: any = useState(null);\n\n\n    const filterTimers = (key: any, input: any) => {\n        let filterArray: any = [];\n        let result: any = '';\n        let timerData: any = [];\n        // if the input is id (user dropdown)\n        if (input === 'user'){\n          let timers = timerModel;\n          filterArray = filterParams;\n          filterArray['assignedTo'] = key;\n          // set state of filter to include id param\n          setFilterParams(filterArray);\n          // if the filter has a check param\n          if (filterParams.client) {\n            // set todos to only the todos that are checked\n            timers = timerModel.filter((obj: any) => obj.client === filterParams.client);\n            console.log('client filter is', timers)\n          }\n          //console.log('filter is', filter)\n          // set result to todos that either match the key user id OR the array of user ids includes the todo.user id\n          result = timers.filter((obj: any) => obj.assignedTo === key || key.includes(obj.assignedTo));\n        } \n        // if the input is a keyword (searchbar)\n        if (input === 'client') {\n          // set todos to the todos in the model\n          filterArray = filterParams;\n          let timers = timerModel;\n          filterArray['client'] = key;\n          setFilterParams(filterArray)\n          // if there is an id filter and a check filter \n          if (filterParams.assignedTo) {\n            // set todos to todos where the 'isComplete' value and the 'user' value are equal to the filter params\n            timers = timerModel.filter((obj: any) => obj.assignedTo === filterParams.assignedTo);\n          } \n          // set result to all the todos (already filtered by user dropdown/checkbox) that include the search keyword/letters\n          result = timers.filter((obj: any) => obj.client === key);\n        } \n        // set the todos in the formData to the filtered todos \n        timerData = result;\n        console.log('TIMER DATA', timerData)\n        // console.log('result is', result);\n      \n        // set the view state to the formData array\n        setTimerView(timerData)\n      }\n\n    /** Function runs on first render, checks for passed props.isType */\n\n    const getData = () => {\n        if(filterType === 'Project Name') {\n            /** Loop through each item in fetched data (test in this case) */\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                /** set filterObj 'value' and 'label' to corresponding value from fetched data (in this case, the name is assigned as this is a 'Project Name' filter) */\n                filterObj.value = item.name;\n                filterObj.label = item.name;\n                /** Push newly created filterObj to the filterOptions array (to be displayed in the react-select dropdown) */\n                filterOptionsArray.push(filterObj);\n                //console.log('the options are', filterOptions)\n            });\n        }\n\n        if(filterType === 'User') {\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                filterObj.value = item.assignedTo;\n                filterObj.label = item.assignedTo;\n                filterOptionsArray.push(filterObj);\n            });\n        }\n\n        if(filterType === 'Client') {\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                filterObj.value = item.client;\n                filterObj.label = item.client;\n                filterOptionsArray.push(filterObj);\n            });\n        }\n        setFilterOptions(filterOptionsArray);\n    }\n\n    useEffect(() => {\n        /** set the filterType state to passed isType prop */\n        setFilterType(props.isType);\n        /** fetch data and assign it to dropdown */\n        getData();\n    }, []);\n\n    useEffect(() => {\n        if (!filterParams.user && !filterParams.client) {\n            \n        }\n    }, [timerView])\n\n    useEffect(()=> {\n        console.log('timers are', timerModel)\n        console.log('timerView is', timerView)\n        console.log('filter options are', filterOptions)\n        console.log('filter is', filterParams)\n    }, [timerView])\n    console.log('timerView is', timerView)\n\n    return(\n        <div className='w-60 ml-6 mr-6'>\n            <Select placeholder={filterType} options={filterOptions} onChange={(e: any) => {setSelectedOption(e.value); filterTimers(e.value, filterType.toLowerCase())}} />\n        </div>\n    )\n\n}","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/StyleSelect.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/ActiveTimer.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartFilter.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartView.tsx",["161"],"import React from 'react';\nimport Select from 'react-select';\n\nexport const ChartView: React.FC = () => {\n\n    const options = [\n        {\n            \"value\": \"pie\",\n            \"label\": \"pie\"\n        },\n        {\n            \"value\": \"bar\",\n            \"label\": \"bar\"\n        },\n        {\n            \"value\": \"line\",\n            \"label\": \"line\"\n        }\n    ]\n\n    const changeEvent = (e: any) => {\n\n    }\n\n\n    return(\n        <Select options={options}></Select>\n    )\n\n}\n",["162","163"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Sidebar.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/SidebarItem.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Profile.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerObj.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/API.ts",["164"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Clock.tsx",["165"],"import React, { useEffect, useState } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { getTimers } from '../API';\nimport Convert from '../chart/Calculations/Conversions';\n\n/**\n * Displays the current total time elapsed for a particular timer [WIP]\n *\n * When a timer is started, an object is created and an API request is made, PUTTING the newly created object to the database.\n * The object will have a `startTime` value (a `new Date()` with the current time`).\n * This clock will remain running until it is stopped via a button press, after which an `endTime` value will be appended to the\n * object (a `new Date()` with the current time upon stopping the timer).\n *\n * @constructor\n */\n\nexport const Clock: React.FC = () => {\n\n    const [difference, setDifference] = useState('');\n    const fetched = new Date('February 16, 2021 14:08:50');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const current = new Date();\n            const dif = differenceInSeconds(current, fetched);\n            let days = Convert.days(dif);\n            let hours = Convert.hours(dif);\n            let minutes = Convert.minutes(dif);\n            let seconds = Convert.seconds(dif);\n            let timeString = `${days} : ${hours} : ${minutes} : ${seconds}`;\n            setDifference(timeString)\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return(\n        <span>\n            {difference}\n        </span>\n    )\n\n}\n\n","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/PieGraph.tsx",["166"],"import React from 'react';\nimport { Pie } from 'react-chartjs-2';\n\n/**\n * Generates a Pie graph out of supplied data\n *\n * @prop {object} graphData\n * @prop {object} graphOptions\n */\n\ninterface Props {\n    graphData: {}\n    graphOptions: {}\n}\n\nconst PieGraph = (props: Props) => {\n\n    return(\n\n        <Pie\n            data={props.graphData}\n            options={props.graphOptions}\n        />\n\n\n    )\n\n}\n\nexport default PieGraph",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"167","replacedBy":"171"},{"ruleId":"169","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":12},{"ruleId":"177","severity":1,"message":"178","line":55,"column":8,"nodeType":"179","endLine":55,"endColumn":10,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":59,"column":8,"nodeType":"179","endLine":59,"endColumn":20,"suggestions":"182"},{"ruleId":"183","severity":1,"message":"184","line":47,"column":11,"nodeType":"185","messageId":"186","endLine":47,"endColumn":15,"fix":"187"},{"ruleId":"173","severity":1,"message":"188","line":7,"column":11,"nodeType":"175","messageId":"176","endLine":7,"endColumn":16},{"ruleId":"189","severity":1,"message":"190","line":18,"column":34,"nodeType":"191","messageId":"192","endLine":18,"endColumn":35},{"ruleId":"167","replacedBy":"193"},{"ruleId":"169","replacedBy":"194"},{"ruleId":"177","severity":1,"message":"195","line":17,"column":8,"nodeType":"179","endLine":17,"endColumn":10,"suggestions":"196"},{"ruleId":"173","severity":1,"message":"197","line":2,"column":17,"nodeType":"175","messageId":"176","endLine":2,"endColumn":21},{"ruleId":"173","severity":1,"message":"198","line":2,"column":37,"nodeType":"175","messageId":"176","endLine":2,"endColumn":42},{"ruleId":"173","severity":1,"message":"199","line":25,"column":24,"nodeType":"175","messageId":"176","endLine":25,"endColumn":37},{"ruleId":"173","severity":1,"message":"200","line":36,"column":12,"nodeType":"175","messageId":"176","endLine":36,"endColumn":26},{"ruleId":"177","severity":1,"message":"201","line":134,"column":8,"nodeType":"179","endLine":134,"endColumn":10,"suggestions":"202"},{"ruleId":"177","severity":1,"message":"203","line":140,"column":8,"nodeType":"179","endLine":140,"endColumn":19,"suggestions":"204"},{"ruleId":"177","severity":1,"message":"205","line":147,"column":8,"nodeType":"179","endLine":147,"endColumn":19,"suggestions":"206"},{"ruleId":"173","severity":1,"message":"207","line":21,"column":11,"nodeType":"175","messageId":"176","endLine":21,"endColumn":22},{"ruleId":"167","replacedBy":"208"},{"ruleId":"169","replacedBy":"209"},{"ruleId":"173","severity":1,"message":"174","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":12},{"ruleId":"177","severity":1,"message":"210","line":17,"column":8,"nodeType":"179","endLine":17,"endColumn":10,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"212","line":18,"column":7,"nodeType":"175","messageId":"176","endLine":18,"endColumn":12},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],["213"],["214"],"@typescript-eslint/no-unused-vars","'test' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTimerModel' and 'timerModel'. Either include them or remove the dependency array.","ArrayExpression",["215"],"React Hook useEffect has a missing dependency: 'setTimerView'. Either include it or remove the dependency array.",["216"],"no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"217","text":"218"},"'Props' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["213"],["214"],"React Hook useEffect has missing dependencies: 'testData' and 'testOptions'. Either include them or remove the dependency array.",["219"],"'Card' is defined but never used.","'Image' is defined but never used.","'setTimerModel' is assigned a value but never used.","'selectedOption' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'props.isType'. Either include them or remove the dependency array. If 'setFilterType' needs the current value of 'props.isType', you can also switch to useReducer instead of useState and read 'props.isType' in the reducer.",["220"],"React Hook useEffect has missing dependencies: 'filterParams.client' and 'filterParams.user'. Either include them or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'filterOptions', 'filterParams', and 'timerModel'. Either include them or remove the dependency array.",["222"],"'changeEvent' is assigned a value but never used.",["213"],["214"],"React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["223"],"'Graph' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},[1664,1675],"",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},"Update the dependencies array to be: [setTimerModel, timerModel]",{"range":"238","text":"239"},"Update the dependencies array to be: [setTimerView, timerModel]",{"range":"240","text":"241"},"Update the dependencies array to be: [testData, testOptions]",{"range":"242","text":"243"},"Update the dependencies array to be: [getData, props.isType]",{"range":"244","text":"245"},"Update the dependencies array to be: [filterParams.client, filterParams.user, timerView]",{"range":"246","text":"247"},"Update the dependencies array to be: [filterOptions, filterParams, timerModel, timerView]",{"range":"248","text":"249"},"Update the dependencies array to be: [fetched]",{"range":"250","text":"251"},[1518,1520],"[setTimerModel, timerModel]",[1586,1598],"[setTimerView, timerModel]",[610,612],"[testData, testOptions]",[5020,5022],"[getData, props.isType]",[5136,5147],"[filterParams.client, filterParams.user, timerView]",[5375,5386],"[filterOptions, filterParams, timerModel, timerView]",[566,568],"[fetched]"]