[{"/home/bluesky/Luke/projects/Horus-frontend/src/index.tsx":"1","/home/bluesky/Luke/projects/Horus-frontend/src/reportWebVitals.ts":"2","/home/bluesky/Luke/projects/Horus-frontend/src/App.tsx":"3","/home/bluesky/Luke/projects/Horus-frontend/src/pages/Dashboard.tsx":"4","/home/bluesky/Luke/projects/Horus-frontend/src/pages/Help.tsx":"5","/home/bluesky/Luke/projects/Horus-frontend/src/pages/Statistics.tsx":"6","/home/bluesky/Luke/projects/Horus-frontend/src/pages/Settings.tsx":"7","/home/bluesky/Luke/projects/Horus-frontend/src/pages/NotFound.tsx":"8","/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/Sidebar.tsx":"9","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerDashboard.tsx":"10","/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/BarGraph.tsx":"11","/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/PieGraph.tsx":"12","/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/filters/ChartFilter.tsx":"13","/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/Profile.tsx":"14","/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/SidebarItem.tsx":"15","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerContainer.tsx":"16","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimerControl.tsx":"17","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/filter/Filter.tsx":"18","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/filter/FilterContainer.tsx":"19","/home/bluesky/Luke/projects/Horus-frontend/src/Components/API.ts":"20","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimerCreate.tsx":"21","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimeTracker.tsx":"22","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/AddButton.tsx":"23","/home/bluesky/Luke/projects/Horus-frontend/src/Components/notify/Notify.tsx":"24","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerObj.tsx":"25","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/Clock.tsx":"26"},{"size":543,"mtime":1613540684629,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1613540684629,"results":"29","hashOfConfig":"28"},{"size":1222,"mtime":1613540684625,"results":"30","hashOfConfig":"28"},{"size":239,"mtime":1613540684629,"results":"31","hashOfConfig":"28"},{"size":349,"mtime":1613540684629,"results":"32","hashOfConfig":"28"},{"size":2463,"mtime":1613540684629,"results":"33","hashOfConfig":"28"},{"size":122,"mtime":1613540684629,"results":"34","hashOfConfig":"28"},{"size":387,"mtime":1613540684629,"results":"35","hashOfConfig":"28"},{"size":1722,"mtime":1613540684629,"results":"36","hashOfConfig":"28"},{"size":638,"mtime":1613540684629,"results":"37","hashOfConfig":"28"},{"size":451,"mtime":1613540684625,"results":"38","hashOfConfig":"28"},{"size":430,"mtime":1613540684625,"results":"39","hashOfConfig":"28"},{"size":673,"mtime":1613540684629,"results":"40","hashOfConfig":"28"},{"size":687,"mtime":1613540684629,"results":"41","hashOfConfig":"28"},{"size":1201,"mtime":1613540684629,"results":"42","hashOfConfig":"28"},{"size":2724,"mtime":1613544707294,"results":"43","hashOfConfig":"28"},{"size":329,"mtime":1613540684629,"results":"44","hashOfConfig":"28"},{"size":5679,"mtime":1613614795421,"results":"45","hashOfConfig":"28"},{"size":1321,"mtime":1613614795421,"results":"46","hashOfConfig":"28"},{"size":949,"mtime":1613540684625,"results":"47","hashOfConfig":"28"},{"size":3093,"mtime":1613540684629,"results":"48","hashOfConfig":"28"},{"size":397,"mtime":1613540684629,"results":"49","hashOfConfig":"28"},{"size":743,"mtime":1613540684629,"results":"50","hashOfConfig":"28"},{"size":1159,"mtime":1613540684629,"results":"51","hashOfConfig":"28"},{"size":1453,"mtime":1613540684629,"results":"52","hashOfConfig":"28"},{"size":647,"mtime":1613540684629,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1wm3hmn",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/home/bluesky/Luke/projects/Horus-frontend/src/index.tsx",[],["113","114"],"/home/bluesky/Luke/projects/Horus-frontend/src/reportWebVitals.ts",[],"/home/bluesky/Luke/projects/Horus-frontend/src/App.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/pages/Dashboard.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/pages/Help.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/pages/Statistics.tsx",["115"],"import React, { useState, useEffect } from 'react';\nimport PieGraph from '../Components/chart/PieGraph';\nimport BarGraph from '../Components/chart/BarGraph';\nimport { ChartFilter } from '../Components/chart/filters/ChartFilter';\nimport './Statistics.scss';\nimport { Button } from 'semantic-ui-react';\n\nexport const Statistics: React.FC = () => {\n\n    const [chartType, setChartType] = useState('pie');\n    const [chartData, setChartData] = useState({});\n    const [chartOptions, setChartOptions] = useState({});\n\n    useEffect(() => {\n        setChartData(testData)\n        setChartOptions(testOptions)\n    }, []);\n\n    let testOptions = {\n        title:{\n            display:true,\n            text:'A graph',\n            fontSize:20\n        },\n        legend:{\n            display:true,\n            position:'right'\n        }\n    };\n\n    let testData = {\n        labels: [],\n        datasets: [\n            {\n                label: 'Rainfall',\n                backgroundColor: [\n                    '#E26D5C',\n                    '#59899c',\n                    '#463F3A',\n                    '#472D30',\n                    '#FFFFFF'\n                ],\n                hoverBackgroundColor: [\n                    '#501800',\n                    '#4B5000',\n                    '#175000',\n                    '#003350',\n                    '#35014F'\n                ],\n                data: [65, 59, 80, 81, 56]\n            }\n        ]\n    };\n\n    const handleGraphChange = (e: any) => {\n        setChartType(e.target.value);\n        console.log(chartType)\n    };\n\n    const activeChart = () => {\n        if(chartType === 'pie') {\n            return(\n                <PieGraph graphData={chartData} graphOptions={chartOptions} />\n            )\n        }\n        if(chartType === 'bar') {\n            return(\n                <BarGraph graphData={chartData} graphOptions={chartOptions}/>\n            )\n        }\n    };\n\n\n    return(\n        <section className='stats-page-container'>\n            <h1>Statistics</h1>\n            <div className=\"stats-control\">\n                <ChartFilter />\n                <Button onClick={handleGraphChange} value='pie'>Pie</Button>\n                <Button onClick={handleGraphChange} value='bar'>Bar</Button>\n            </div>\n\n            <section className='w-full'>\n\n                <article className='w-4/5 '>\n                    {activeChart()}\n                </article>\n\n\n            </section>\n\n        </section>\n    )\n}","/home/bluesky/Luke/projects/Horus-frontend/src/pages/Settings.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/pages/NotFound.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/Sidebar.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerDashboard.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/BarGraph.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/PieGraph.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/chart/filters/ChartFilter.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/Profile.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/sidebar/SidebarItem.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerContainer.tsx",["116","117","118"],"import React, { useState, useEffect } from 'react';\nimport { TimerObj } from './TimerObj';\nimport './TimerContainer.scss';\nimport test from '../../test.json';\nimport { getTimers } from '../API';\nimport Select from 'react-select';\nimport { useBetween } from 'use-between';\n\n/**\n *\n * Contains timerObjs as direct children (currently being rendered from test data @ test.json)\n *\n * Card/list style defined by React-select dropdown box\n *\n * @constructor\n */\n\ninterface timerDataType {\n    data: Array<object>\n}\n\n\nconst useTimerState = () => {\n    const [timerModel, setModel] = useState<Array<timerDataType>>([]);\n    const [timerView, setView] = useState<Array<timerDataType>>([]);\n    const setTimerModel = (value: any) => {setModel(value);} \n    const setTimerView = (value: any) => {setView(value)}\n    return ({timerModel, setTimerModel, timerView, setTimerView});\n}\n\n\n  export const useSharedTimerState = () => useBetween(useTimerState);\n\nconst TimerContainer: React.FC = () => {\n\n    // set states\n    const [styleValue, setStyleValue] = useState('card');\n    // const [fetchedTimers, setFetchedTimers] = useState<Array<timerDataType>>([]);\n    const {timerModel, setTimerModel, timerView, setTimerView} = useSharedTimerState();\n\n    /**\n     * @function\n     * Get all stored timers from DB\n     */\n    \n\n    useEffect(() => {\n        getTimers()\n            .then(timers => {\n                // @ts-ignore\n                setTimerModel(timers.data)\n                console.log(timerModel)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        setTimerView(timerModel);\n    }, [timerModel])\n\n    // Define options for react-select dropdown\n    const styleOptions = [\n        {\n            'value': 'card',\n            'label': 'Card',\n        },\n        {\n            'value': 'list',\n            'label': 'List',\n        }\n    ];\n\n    // change styleValue state on react-select option change\n    const handleChange = (e: any) => {\n        setStyleValue(e.value)\n    }\n\n        return (\n            <>\n                <Select options={styleOptions} onChange={handleChange} className='w-50 float-right m-8 mt-0'/>\n                <div className={`timer-container ${styleValue}-container`}>\n                    {timerView.map((data: any) =>\n                        <TimerObj\n                            key={data.name}\n                            timerName={data.name}\n                            timerClient={data.client}\n                            timerProject={data.project}\n                            timerStyle={styleValue}\n                            timerDate={data.time}\n                        />\n                    )}\n\n                </div>\n            </>\n\n        )\n\n}\n\nexport default TimerContainer","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimerControl.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/filter/Filter.tsx",["119","120","121","122","123","124"],"import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport test from '../../../test.json';\nimport {useSharedTimerState} from '../TimerContainer'\nimport { useSharedFilterState } from './FilterContainer';\n\n/**\n * Multi-use dropdown-style filter powered by { react-select }\n * --\n * Filter types:\n * - Project Name\n * - User\n * - Client\n *\n * Filter type is determined by passed prop filterType\n */\n\ninterface Props {\n    isType: string\n    /** type of filter to be displayed */\n}\n\nexport const Filter: React.FC<Props> = (props: Props) => {\n\n    const {timerModel, setTimerModel, timerView, setTimerView} = useSharedTimerState();\n\n    const [filterType, setFilterType] = useState(props.isType)\n    /** value is set by props.isType */\n\n    let filterOptionsArray: Array<object> = [];\n\n    const [filterOptions, setFilterOptions]: any = useState(null);\n\n    const {filterParams, setFilterParams} = useSharedFilterState();\n\n    const [selectedOption, setSelectedOption]: any = useState(null);\n\n\n    const filterTimers = (key: any, input: any) => {\n        let filterArray: any = [];\n        let result: any = '';\n        let timerData: any = [];\n        // if the input is id (user dropdown)\n        if (input === 'user'){\n          let timers = timerModel;\n          filterArray = filterParams;\n          filterArray['assignedTo'] = key;\n          // set state of filter to include id param\n          setFilterParams(filterArray);\n          // if the filter has a check param\n          if (filterParams.client) {\n            // set todos to only the todos that are checked\n            timers = timerModel.filter((obj: any) => obj.client === filterParams.client);\n            console.log('client filter is', timers)\n          }\n          //console.log('filter is', filter)\n          // set result to todos that either match the key user id OR the array of user ids includes the todo.user id\n          result = timers.filter((obj: any) => obj.assignedTo === key || key.includes(obj.assignedTo));\n        } \n        // if the input is a keyword (searchbar)\n        if (input === 'client') {\n          // set todos to the todos in the model\n          filterArray = filterParams;\n          let timers = timerModel;\n          filterArray['client'] = key;\n          setFilterParams(filterArray)\n          // if there is an id filter and a check filter \n          if (filterParams.assignedTo) {\n            // set todos to todos where the 'isComplete' value and the 'user' value are equal to the filter params\n            timers = timerModel.filter((obj: any) => obj.assignedTo === filterParams.assignedTo);\n          } \n          // set result to all the todos (already filtered by user dropdown/checkbox) that include the search keyword/letters\n          result = timers.filter((obj: any) => obj.client === key);\n        } \n        // set the todos in the formData to the filtered todos \n        timerData = result;\n        console.log('TIMER DATA', timerData)\n        // console.log('result is', result);\n      \n        // set the view state to the formData array\n        setTimerView(timerData)\n      }\n\n    /** Function runs on first render, checks for passed props.isType */\n\n    const getData = () => {\n        if(filterType === 'Project Name') {\n            /** Loop through each item in fetched data (test in this case) */\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                /** set filterObj 'value' and 'label' to corresponding value from fetched data (in this case, the name is assigned as this is a 'Project Name' filter) */\n                filterObj.value = item.name;\n                filterObj.label = item.name;\n                /** Push newly created filterObj to the filterOptions array (to be displayed in the react-select dropdown) */\n                filterOptionsArray.push(filterObj);\n                //console.log('the options are', filterOptions)\n            });\n        }\n\n        if(filterType === 'User') {\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                filterObj.value = item.assignedTo;\n                filterObj.label = item.assignedTo;\n                filterOptionsArray.push(filterObj);\n            });\n        }\n\n        if(filterType === 'Client') {\n            test.forEach(item => {\n                let filterObj = {\n                    \"value\": '',\n                    \"label\": ''\n                }\n                filterObj.value = item.client;\n                filterObj.label = item.client;\n                filterOptionsArray.push(filterObj);\n            });\n        }\n        setFilterOptions(filterOptionsArray);\n    }\n\n    useEffect(() => {\n        /** set the filterType state to passed isType prop */\n        setFilterType(props.isType);\n        /** fetch data and assign it to dropdown */\n        getData();\n    }, []);\n\n    useEffect(() => {\n        if (!filterParams.user && !filterParams.client) {\n            \n        }\n    }, [timerView])\n\n    useEffect(()=> {\n        console.log('timers are', timerModel)\n        console.log('timerView is', timerView)\n        console.log('filter options are', filterOptions)\n        console.log('filter is', filterParams)\n    }, [timerView])\n    console.log('timerView is', timerView)\n\n    return(\n        <div className='w-60 ml-6 mr-6'>\n            <Select placeholder={filterType} options={filterOptions} onChange={(e: any) => {setSelectedOption(e.value); filterTimers(e.value, filterType.toLowerCase())}} />\n        </div>\n    )\n\n}","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/filter/FilterContainer.tsx",["125","126"],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/API.ts",["127"],"import axios, { AxiosResponse } from 'axios';\nimport test from '../test.json';\n\nconst baseURL: string = \"./test.json\";\n\nexport const getTimers = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const timers: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL\n        )\n        return timers\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const startClock = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const meals: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL + \"random.php\"\n        )\n        return meals\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const stopClock = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const meals: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL + \"random.php\"\n        )\n        return meals\n    } catch (error) {\n        throw new Error(error)\n    }\n}","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimerCreate.tsx",["128"],"import React, { useState } from 'react';\nimport { Form, Input, Checkbox } from 'semantic-ui-react';\nimport AddButton from './AddButton';\nimport { Notify } from '../../notify/Notify';\nimport { TimeTracker } from './TimeTracker';\n\n/**\n * [INCOMPLETE - no data is sent to backend and no new timer object is created.  Data is currently being set to state timerData and console logged for proof of concept.  Time tracker does not function correctly and no time data is logged)\n * Creates a new timer and a new { timerObj }\n * Uses semantic UI form, input and checkbox components\n *\n * @constructor\n */\n\nconst TimerCreate = () => {\n\n    const [timerData, setTimerData] = useState<ITimer | {}>({});\n    /** Data taken from form fields and PUT to the backend */\n    const [isBillable, setIsBillable] = useState(false);\n    /** Billable checkbox value (as boolean) */\n    const [showNotify, setShowNotify] = useState(false);\n    /** state to be passed as a prop to { Notify } component (triggering its appearance)  */\n\n    const handleTimerName = (e: React.FormEvent<HTMLInputElement>): void => {\n        setTimerData({\n            ...timerData,\n            name: e.currentTarget.value\n\n        })\n        console.log(timerData)\n    }\n\n    const handleTimerAssigned = (e: React.FormEvent<HTMLInputElement>): void => {\n        setTimerData({\n            ...timerData,\n            assignedTo: e.currentTarget.value\n\n        })\n        console.log(timerData)\n    }\n\n    const handleTimerAdd = (e: React.FormEvent<HTMLInputElement>): void => {\n        console.log(timerData)\n        setShowNotify(true)\n        setTimeout(function(){\n            setShowNotify(false);\n        }.bind(this),4000);\n    }\n\n    const handleBillable = (e: React.FormEvent<HTMLInputElement>): void => {\n        if(!isBillable) {\n            setIsBillable(true)\n        } else {\n            setIsBillable(false)\n        }\n\n        setTimerData({\n            ...timerData,\n            billable: isBillable\n        })\n        console.log(timerData)\n    }\n\n    return(\n        <>\n        <Form.Field className=\"flex items-center\">\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>Project Name</label>\n                <Input type='text' onChange={handleTimerName}/>\n            </div>\n\n\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>User</label>\n                <Input type='text' onChange={handleTimerAssigned}/>\n            </div>\n\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>Time Spent</label>\n                <TimeTracker />\n            </div>\n\n\n            <Form.Field\n                control={Checkbox}\n                label='Billable?'\n                onChange={handleBillable}\n            />\n        </Form.Field>\n        <AddButton addTimer={handleTimerAdd} isDisabled={timerData === undefined ? true: false} />\n            <Notify isVisible={showNotify} text='timer added successfully!' icon='check'/>\n            </>\n    )\n\n}\n\nexport default TimerCreate","/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/TimeTracker.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/controls/AddButton.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/notify/Notify.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/TimerObj.tsx",[],"/home/bluesky/Luke/projects/Horus-frontend/src/Components/timer/Clock.tsx",["129"],"import React, { useEffect, useState } from 'react';\nimport { differenceInSeconds } from 'date-fns';\n\nexport const Clock: React.FC = (props: any) => {\n\n    const [difference, setDifference] = useState(0)\n    const fetched = new Date('December 17, 2020 02:24:00');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const current = new Date();\n            const dif = differenceInSeconds(current, fetched);\n            setDifference(dif)\n            console.log(dif);\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return(\n        <div>\n            {difference}\n        </div>\n    )\n\n}\n",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":17,"column":8,"nodeType":"136","endLine":17,"endColumn":10,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":4,"column":8,"nodeType":"140","messageId":"141","endLine":4,"endColumn":12},{"ruleId":"134","severity":1,"message":"142","line":55,"column":8,"nodeType":"136","endLine":55,"endColumn":10,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":59,"column":8,"nodeType":"136","endLine":59,"endColumn":20,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":29,"column":5,"nodeType":"140","messageId":"141","endLine":29,"endColumn":18},{"ruleId":"138","severity":1,"message":"147","line":31,"column":5,"nodeType":"140","messageId":"141","endLine":31,"endColumn":17},{"ruleId":"138","severity":1,"message":"148","line":41,"column":25,"nodeType":"140","messageId":"141","endLine":41,"endColumn":40},{"ruleId":"134","severity":1,"message":"149","line":93,"column":6,"nodeType":"136","endLine":93,"endColumn":8,"suggestions":"150"},{"ruleId":"134","severity":1,"message":"151","line":98,"column":6,"nodeType":"136","endLine":98,"endColumn":17,"suggestions":"152"},{"ruleId":"134","severity":1,"message":"153","line":105,"column":6,"nodeType":"136","endLine":105,"endColumn":17,"suggestions":"154"},{"ruleId":"138","severity":1,"message":"155","line":24,"column":12,"nodeType":"140","messageId":"141","endLine":24,"endColumn":24},{"ruleId":"138","severity":1,"message":"156","line":25,"column":12,"nodeType":"140","messageId":"141","endLine":25,"endColumn":21},{"ruleId":"138","severity":1,"message":"139","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":12},{"ruleId":"157","severity":1,"message":"158","line":47,"column":11,"nodeType":"159","messageId":"160","endLine":47,"endColumn":15,"fix":"161"},{"ruleId":"134","severity":1,"message":"162","line":17,"column":8,"nodeType":"136","endLine":17,"endColumn":10,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'testData' and 'testOptions'. Either include them or remove the dependency array.","ArrayExpression",["166"],"@typescript-eslint/no-unused-vars","'test' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'setTimerModel' and 'timerModel'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has a missing dependency: 'setTimerView'. Either include it or remove the dependency array.",["168"],"'setTimerModel' is assigned a value but never used.","'setTimerView' is assigned a value but never used.","'setFilterParams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'props.isType'. Either include them or remove the dependency array. If 'setFilterType' needs the current value of 'props.isType', you can also switch to useReducer instead of useState and read 'props.isType' in the reducer.",["169"],"React Hook useEffect has missing dependencies: 'filterParams.client' and 'filterParams.user'. Either include them or remove the dependency array.",["170"],"React Hook useEffect has missing dependencies: 'filterOptions', 'filterParams', and 'timerModel'. Either include them or remove the dependency array.",["171"],"'filterParams' is assigned a value but never used.","'timerView' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"172","text":"173"},"React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["174"],"no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},[1664,1675],"",{"desc":"187","fix":"188"},"Update the dependencies array to be: [testData, testOptions]",{"range":"189","text":"190"},"Update the dependencies array to be: [setTimerModel, timerModel]",{"range":"191","text":"192"},"Update the dependencies array to be: [setTimerView, timerModel]",{"range":"193","text":"194"},"Update the dependencies array to be: [getData, props.isType]",{"range":"195","text":"196"},"Update the dependencies array to be: [filterParams.client, filterParams.user, timerView]",{"range":"197","text":"198"},"Update the dependencies array to be: [filterOptions, filterParams, timerModel, timerView]",{"range":"199","text":"200"},"Update the dependencies array to be: [fetched]",{"range":"201","text":"202"},[610,612],"[testData, testOptions]",[1520,1522],"[setTimerModel, timerModel]",[1588,1600],"[setTimerView, timerModel]",[2601,2603],"[getData, props.isType]",[2692,2703],"[filterParams.client, filterParams.user, timerView]",[2917,2928],"[filterOptions, filterParams, timerModel, timerView]",[566,568],"[fetched]"]