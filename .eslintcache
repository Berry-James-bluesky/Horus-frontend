[{"/Users/jamesberry/PhpstormProjects/horus-frontend/src/index.tsx":"1","/Users/jamesberry/PhpstormProjects/horus-frontend/src/reportWebVitals.ts":"2","/Users/jamesberry/PhpstormProjects/horus-frontend/src/App.tsx":"3","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/PageHeader.tsx":"4","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerDashboard.tsx":"5","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerContainer.tsx":"6","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerControl.tsx":"7","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerCreate.tsx":"8","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Timer.tsx":"9","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/AddButton.tsx":"10","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Statistics.tsx":"11","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Dashboard.tsx":"12","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Help.tsx":"13","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Settings.tsx":"14","/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/NotFound.tsx":"15","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/modal/EditModal.tsx":"16","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/notify/Notify.tsx":"17","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimeTracker.tsx":"18","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/FilterContainer.tsx":"19","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/Filter.tsx":"20","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/StyleSelect.tsx":"21","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/ActiveTimer.tsx":"22","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartFilter.tsx":"23","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartView.tsx":"24","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Sidebar.tsx":"25","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/SidebarItem.tsx":"26","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Profile.tsx":"27","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerObj.tsx":"28","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/API.ts":"29","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Clock.tsx":"30","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/BarGraph.tsx":"31","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/CalcContainer.tsx":"32","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/Total.tsx":"33","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Graph.tsx":"34","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/Conversions.ts":"35"},{"size":543,"mtime":1611882451964,"results":"36","hashOfConfig":"37"},{"size":425,"mtime":1611882268898,"results":"38","hashOfConfig":"37"},{"size":1222,"mtime":1613529124535,"results":"39","hashOfConfig":"37"},{"size":926,"mtime":1612919005335,"results":"40","hashOfConfig":"37"},{"size":638,"mtime":1613465226933,"results":"41","hashOfConfig":"37"},{"size":2722,"mtime":1613613426669,"results":"42","hashOfConfig":"37"},{"size":329,"mtime":1613128087804,"results":"43","hashOfConfig":"37"},{"size":3093,"mtime":1613463799725,"results":"44","hashOfConfig":"37"},{"size":1054,"mtime":1613371752006,"results":"45","hashOfConfig":"37"},{"size":743,"mtime":1613463557075,"results":"46","hashOfConfig":"37"},{"size":2724,"mtime":1613613426671,"results":"47","hashOfConfig":"37"},{"size":239,"mtime":1613373392946,"results":"48","hashOfConfig":"37"},{"size":349,"mtime":1613129639429,"results":"49","hashOfConfig":"37"},{"size":122,"mtime":1612409037806,"results":"50","hashOfConfig":"37"},{"size":387,"mtime":1613129498384,"results":"51","hashOfConfig":"37"},{"size":1419,"mtime":1613373199645,"results":"52","hashOfConfig":"37"},{"size":1159,"mtime":1613462493476,"results":"53","hashOfConfig":"37"},{"size":397,"mtime":1613463853204,"results":"54","hashOfConfig":"37"},{"size":4924,"mtime":1613613560747,"results":"55","hashOfConfig":"37"},{"size":3519,"mtime":1613613560746,"results":"56","hashOfConfig":"37"},{"size":560,"mtime":1612501713788,"results":"57","hashOfConfig":"37"},{"size":370,"mtime":1613539936525,"results":"58","hashOfConfig":"37"},{"size":673,"mtime":1613368249002,"results":"59","hashOfConfig":"37"},{"size":431,"mtime":1612930159235,"results":"60","hashOfConfig":"37"},{"size":1722,"mtime":1613462665831,"results":"61","hashOfConfig":"37"},{"size":1201,"mtime":1613462855829,"results":"62","hashOfConfig":"37"},{"size":687,"mtime":1613462576932,"results":"63","hashOfConfig":"37"},{"size":1453,"mtime":1613539957535,"results":"64","hashOfConfig":"37"},{"size":949,"mtime":1613531473711,"results":"65","hashOfConfig":"37"},{"size":1489,"mtime":1613613426667,"results":"66","hashOfConfig":"37"},{"size":451,"mtime":1613613408684,"results":"67","hashOfConfig":"37"},{"size":421,"mtime":1613613426664,"results":"68","hashOfConfig":"37"},{"size":2229,"mtime":1613613426666,"results":"69","hashOfConfig":"37"},{"size":1839,"mtime":1613613426666,"results":"70","hashOfConfig":"37"},{"size":367,"mtime":1613613426665,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"ourz6o",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/jamesberry/PhpstormProjects/horus-frontend/src/index.tsx",[],["155","156"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/reportWebVitals.ts",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/App.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/PageHeader.tsx",[],["157","158"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerDashboard.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerContainer.tsx",["159","160","161"],"import React, { useState, useEffect } from 'react';\nimport { TimerObj } from './TimerObj';\nimport './TimerContainer.scss';\nimport test from '../../test.json';\nimport { getTimers } from '../API';\nimport Select from 'react-select';\nimport { useBetween } from 'use-between';\n\n/**\n *\n * Contains timerObjs as direct children (currently being rendered from test data @ test.json)\n *\n * Card/list style defined by React-select dropdown box\n *\n * @constructor\n */\n\ninterface timerDataType {\n    data: Array<object>\n}\n\n\nconst useTimerState = () => {\n    const [timerModel, setModel] = useState<Array<timerDataType>>([]);\n    const [timerView, setView] = useState<Array<timerDataType>>([]);\n    const setTimerModel = (value: any) => {setModel(value);} \n    const setTimerView = (value: any) => {setView(value)}\n    return ({timerModel, setTimerModel, timerView, setTimerView});\n}\n\n\nexport const useSharedTimerState = () => useBetween(useTimerState);\n\nconst TimerContainer: React.FC = () => {\n\n    // set states\n    const [styleValue, setStyleValue] = useState('card');\n    // const [fetchedTimers, setFetchedTimers] = useState<Array<timerDataType>>([]);\n    const {timerModel, setTimerModel, timerView, setTimerView} = useSharedTimerState();\n\n    /**\n     * @function\n     * Get all stored timers from DB\n     */\n    \n\n    useEffect(() => {\n        getTimers()\n            .then(timers => {\n                // @ts-ignore\n                setTimerModel(timers.data)\n                console.log(timerModel)\n            })\n\n    }, [])\n\n    useEffect(() => {\n        setTimerView(timerModel);\n    }, [timerModel])\n\n    // Define options for react-select dropdown\n    const styleOptions = [\n        {\n            'value': 'card',\n            'label': 'Card',\n        },\n        {\n            'value': 'list',\n            'label': 'List',\n        }\n    ];\n\n    // change styleValue state on react-select option change\n    const handleChange = (e: any) => {\n        setStyleValue(e.value)\n    }\n\n        return (\n            <>\n                <Select options={styleOptions} onChange={handleChange} className='w-50 float-right m-8 mt-0'/>\n                <div className={`timer-container ${styleValue}-container`}>\n                    {timerView.map((data: any) =>\n                        <TimerObj\n                            key={data.name}\n                            timerName={data.name}\n                            timerClient={data.client}\n                            timerProject={data.project}\n                            timerStyle={styleValue}\n                            timerDate={data.time}\n                        />\n                    )}\n\n                </div>\n            </>\n\n        )\n\n}\n\nexport default TimerContainer","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerControl.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimerCreate.tsx",["162"],"import React, { useState } from 'react';\nimport { Form, Input, Checkbox } from 'semantic-ui-react';\nimport AddButton from './AddButton';\nimport { Notify } from '../../notify/Notify';\nimport { TimeTracker } from './TimeTracker';\n\n/**\n * [INCOMPLETE - no data is sent to backend and no new timer object is created.  Data is currently being set to state timerData and console logged for proof of concept.  Time tracker does not function correctly and no time data is logged)\n * Creates a new timer and a new { timerObj }\n * Uses semantic UI form, input and checkbox components\n *\n * @constructor\n */\n\nconst TimerCreate = () => {\n\n    const [timerData, setTimerData] = useState<ITimer | {}>({});\n    /** Data taken from form fields and PUT to the backend */\n    const [isBillable, setIsBillable] = useState(false);\n    /** Billable checkbox value (as boolean) */\n    const [showNotify, setShowNotify] = useState(false);\n    /** state to be passed as a prop to { Notify } component (triggering its appearance)  */\n\n    const handleTimerName = (e: React.FormEvent<HTMLInputElement>): void => {\n        setTimerData({\n            ...timerData,\n            name: e.currentTarget.value\n\n        })\n        console.log(timerData)\n    }\n\n    const handleTimerAssigned = (e: React.FormEvent<HTMLInputElement>): void => {\n        setTimerData({\n            ...timerData,\n            assignedTo: e.currentTarget.value\n\n        })\n        console.log(timerData)\n    }\n\n    const handleTimerAdd = (e: React.FormEvent<HTMLInputElement>): void => {\n        console.log(timerData)\n        setShowNotify(true)\n        setTimeout(function(){\n            setShowNotify(false);\n        }.bind(this),4000);\n    }\n\n    const handleBillable = (e: React.FormEvent<HTMLInputElement>): void => {\n        if(!isBillable) {\n            setIsBillable(true)\n        } else {\n            setIsBillable(false)\n        }\n\n        setTimerData({\n            ...timerData,\n            billable: isBillable\n        })\n        console.log(timerData)\n    }\n\n    return(\n        <>\n        <Form.Field className=\"flex items-center\">\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>Project Name</label>\n                <Input type='text' onChange={handleTimerName}/>\n            </div>\n\n\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>User</label>\n                <Input type='text' onChange={handleTimerAssigned}/>\n            </div>\n\n            <div className=\"flex flex-col items-start text-gray-500 ml-6 mr-6\">\n                <label>Time Spent</label>\n                <TimeTracker />\n            </div>\n\n\n            <Form.Field\n                control={Checkbox}\n                label='Billable?'\n                onChange={handleBillable}\n            />\n        </Form.Field>\n        <AddButton addTimer={handleTimerAdd} isDisabled={timerData === undefined ? true: false} />\n            <Notify isVisible={showNotify} text='timer added successfully!' icon='check'/>\n            </>\n    )\n\n}\n\nexport default TimerCreate","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Timer.tsx",["163","164"],"import React from 'react';\nimport { Card, Button } from 'semantic-ui-react'\nimport { EditModal } from '../modal/EditModal';\nimport { ActiveTimer } from '../timer/ActiveTimer';\nimport './Timer.scss';\n\ninterface Props {\n    name: string\n    project: string\n    client: string\n    assignedTo: string\n    billable: boolean\n}\n\nconst Timer = (props: any) => {\n\n    return(\n        <Card className={'timer' + ' ' + props.styleType + '-item'}>\n            <Card.Content header={props.name} />\n            <Card.Content>\n                <Card.Description>{props.project}, {props.client}</Card.Description>\n            </Card.Content>\n            <Card.Content>\n                <ActiveTimer />\n            </Card.Content>\n            <Card.Content>\n                <EditModal timerName={props.name} assignedUser={props.assignedTo} billable={props.billable}/>\n                <Button>Stop Timer</Button>\n            </Card.Content>\n        </Card>\n    )\n\n}\n\nexport default Timer",["165","166"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/AddButton.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Statistics.tsx",["167","168","169","170","171","172"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Dashboard.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Help.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/Settings.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/pages/NotFound.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/modal/EditModal.tsx",["173","174"],"import React from 'react';\nimport {Button, Card, Header, Icon, Image, Modal, Checkbox} from 'semantic-ui-react'\nimport './EditModal.scss';\n\ninterface Props {\n    timerName: string\n    assignedUser: string\n    billable: boolean\n}\n\nexport const EditModal: React.FC<Props> = (props: any) => {\n\n    const [open, setOpen] = React.useState(false)\n\n    return(\n        <Modal\n            onClose={() => setOpen(false)}\n            onOpen={() => setOpen(true)}\n            open={open}\n            trigger={<Icon name='edit' size='large' className='edit-icon'/>}\n        >\n            <Modal.Header>Edit '{props.timerName}'</Modal.Header>\n            <Modal.Content>\n                <Modal.Description>\n                    <Header>Assigned to</Header>\n                    <p>\n                        {props.assignedUser}\n                    </p>\n                    <Header>Billable</Header>\n                    <Checkbox checked={props.billable}></Checkbox>\n                </Modal.Description>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button color='black' onClick={() => setOpen(false)}>\n                    Cancel\n                </Button>\n                <Button\n                    content=\"Confirm changes\"\n                    labelPosition='right'\n                    icon='checkmark'\n                    onClick={() => setOpen(false)}\n                    positive\n                />\n            </Modal.Actions>\n        </Modal>\n    )\n}","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/notify/Notify.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/controls/TimeTracker.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/FilterContainer.tsx",["175","176"],"import React, {useState} from 'react';\nimport { Filter } from './Filter';\nimport {useBetween} from 'use-between'\nimport { Checkbox, Button } from \"semantic-ui-react\";\nimport {useSharedTimerState} from '../TimerContainer'\nimport { TextField } from '@material-ui/core';\n\n/**\n * Stores rendered { Filter } components\n * @constructor\n */\n\n\nconst useFilterState = () => {\n    const [filterParams, setFilter]: any = useState([])\n    const setFilterParams = (value: any) => {setFilter(value);} \n    return ({filterParams, setFilterParams});\n}\n\nexport const useSharedFilterState = () => useBetween(useFilterState);\n\n\n\n\nexport const FilterContainer = () => {\n\n\nconst {filterParams, setFilterParams} = useSharedFilterState();\nconst {timerView, setTimerView, timerModel} = useSharedTimerState()\n\n\n    const filterTimers = (key: any, input: any) => {\n        let filterArray: any = [];\n        let result: any = '';\n        let timerData: any = [];\n        // if the input is user (user dropdown)\n        if (input === 'user'){\n          let timers = timerModel;\n          filterArray = filterParams;\n          filterArray['assignedTo'] = key;\n          // set state of filter to include user param\n          setFilterParams(filterArray);\n          // if the filter has a client param\n          if (filterParams.client) {\n            // set timers to only the timers that are for that client\n            timers = timerModel.filter((obj: any) => obj.client === filterParams.client);\n            console.log('client filter is', timers)\n          }\n          // set result to timers that either match the key user OR the array of users includes the timers.user value\n          result = timers.filter((obj: any) => obj.assignedTo === key || key.includes(obj.assignedTo));\n        } \n        // if the input is 'client' (client dropdown)\n        if (input === 'client') {\n          // set timers to the timers in the model\n          filterArray = filterParams;\n          let timers = timerModel;\n          filterArray['client'] = key;\n          setFilterParams(filterArray)\n          // if there is a user filter param\n          if (filterParams.assignedTo) {\n            // set timers to timers where the user is equal to the filter user param\n            timers = timerModel.filter((obj: any) => obj.assignedTo === filterParams.assignedTo);\n          } \n          // set the result to the timer (already filtered by other params) that has the input client value \n          result = timers.filter((obj: any) => obj.client === key);\n        } \n          // if the input is a keyword (searchbar)\n        if (input ==='keyword') {\n            // set timers to the timers in the model\n            let timers = timerModel\n            // if there is a user param and a client param in the filter state\n            if (filterParams.assignedTo && filterParams.client) {\n            // set timers to timers where the 'client' value and the 'user' value are equal to the filter params\n            timers = timerModel.filter((obj: any) => (obj.client === filterParams.client || filterParams.client.includes(obj.client)) && ( obj.assignedTo === filterParams.assignedTo || filterParams.assignedTo.includes(obj.assignedTo)));\n            } else \n            // else if the filter only has a user filter\n            if (filterParams.assignedTo) {\n            // find timers that match the user filter param\n            timers = timerModel.filter((obj: any) => obj.assignedTo === filterParams.assignedTo || filterParams.assignedTo.includes(obj.assignedTo));\n            } else\n            // else if there is only a client param\n            if (filterParams.client) {\n            // set timers to the timers that match the client filter param\n            timers = timerModel.filter((obj: any) => obj.client === filterParams.client);\n            }\n            \n            // set result to all the timers (already filtered by user dropdown/client value) that include the search keyword/letters\n            result = timers.filter((obj: any) => obj.name.toLowerCase().includes(key));\n        } \n        // set the todos in the formData to the filtered todos \n        timerData = result;\n        console.log('TIMER DATA', timerData)\n        // console.log('result is', result);\n      \n        // set the view state to the formData array\n        setTimerView(timerData)\n      }\n\n\n    return(\n        <div className='w-full h-20 bg-white flex justify-start flex-row items-center mb-12 p-6 border-l-8 border-secondary mt-12'>\n            <Checkbox label='Active' />\n            <TextField className=\"searchbar\" label=\"Search Tasks\" onKeyUp={(e: any) => {filterTimers(e.target.value.toLowerCase(), 'keyword')}} />\n            <Filter isType='User' filter={filterTimers} />\n            <Filter isType='Client' filter={filterTimers} />\n            <Button onClick={() => {setTimerView(timerModel); setFilterParams([])}}>Reset Filters</Button>\n        </div>\n    )\n\n}","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/Filter.tsx",["177","178","179","180","181","182"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/filter/StyleSelect.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/ActiveTimer.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartFilter.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/filters/ChartView.tsx",["183"],"import React from 'react';\nimport Select from 'react-select';\n\nexport const ChartView: React.FC = () => {\n\n    const options = [\n        {\n            \"value\": \"pie\",\n            \"label\": \"pie\"\n        },\n        {\n            \"value\": \"bar\",\n            \"label\": \"bar\"\n        },\n        {\n            \"value\": \"line\",\n            \"label\": \"line\"\n        }\n    ]\n\n    const changeEvent = (e: any) => {\n\n    }\n\n\n    return(\n        <Select options={options}></Select>\n    )\n\n}\n",["184","185"],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Sidebar.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/SidebarItem.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/sidebar/Profile.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/TimerObj.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/API.ts",["186"],"import axios, { AxiosResponse } from 'axios';\nimport test from '../test.json';\n\nconst baseURL: string = \"./test.json\";\n\nexport const getTimers = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const timers: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL\n        )\n        return timers\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const startClock = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const meals: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL + \"random.php\"\n        )\n        return meals\n    } catch (error) {\n        throw new Error(error)\n    }\n}\n\nexport const stopClock = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const meals: AxiosResponse<ApiDataType> = await axios.get(\n            baseURL + \"random.php\"\n        )\n        return meals\n    } catch (error) {\n        throw new Error(error)\n    }\n}","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/timer/Clock.tsx",["187"],"import React, { useEffect, useState } from 'react';\nimport { differenceInSeconds } from 'date-fns';\nimport { getTimers } from '../API';\nimport Convert from '../chart/Calculations/Conversions';\n\n/**\n * Displays the current total time elapsed for a particular timer [WIP]\n *\n * When a timer is started, an object is created and an API request is made, PUTTING the newly created object to the database.\n * The object will have a `startTime` value (a `new Date()` with the current time`).\n * This clock will remain running until it is stopped via a button press, after which an `endTime` value will be appended to the\n * object (a `new Date()` with the current time upon stopping the timer).\n *\n * @constructor\n */\n\nexport const Clock: React.FC = () => {\n\n    const [difference, setDifference] = useState('');\n    const fetched = new Date('February 16, 2021 14:08:50');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const current = new Date();\n            const dif = differenceInSeconds(current, fetched);\n            let days = Convert.days(dif);\n            let hours = Convert.hours(dif);\n            let minutes = Convert.minutes(dif);\n            let seconds = Convert.seconds(dif);\n            let timeString = `${days} : ${hours} : ${minutes} : ${seconds}`;\n            setDifference(timeString)\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    return(\n        <span>\n            {difference}\n        </span>\n    )\n\n}\n\n","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/BarGraph.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/CalcContainer.tsx",["188"],"import React, { useState, useEffect } from 'react';\nimport { Total } from './Total';\nimport { getTimers } from '../../API';\n\nconst CalcContainer = () => {\n\n    const [timerData, setTimerData] = useState();\n\n    useEffect(() => {\n        getTimers()\n            .then((timers: any) => {\n                setTimerData(timers);\n            })\n    }, []);\n\n    return(\n        <Total />\n    )\n\n}\n\nexport default CalcContainer\n","/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/Total.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Graph.tsx",[],"/Users/jamesberry/PhpstormProjects/horus-frontend/src/Components/chart/Calculations/Conversions.ts",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":12},{"ruleId":"199","severity":1,"message":"200","line":55,"column":8,"nodeType":"201","endLine":55,"endColumn":10,"suggestions":"202"},{"ruleId":"199","severity":1,"message":"203","line":59,"column":8,"nodeType":"201","endLine":59,"endColumn":20,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":47,"column":11,"nodeType":"207","messageId":"208","endLine":47,"endColumn":15,"fix":"209"},{"ruleId":"195","severity":1,"message":"210","line":7,"column":11,"nodeType":"197","messageId":"198","endLine":7,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":18,"column":34,"nodeType":"213","messageId":"214","endLine":18,"endColumn":35},{"ruleId":"189","replacedBy":"215"},{"ruleId":"191","replacedBy":"216"},{"ruleId":"195","severity":1,"message":"217","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"218","line":3,"column":8,"nodeType":"197","messageId":"198","endLine":3,"endColumn":16},{"ruleId":"195","severity":1,"message":"219","line":8,"column":10,"nodeType":"197","messageId":"198","endLine":8,"endColumn":15},{"ruleId":"195","severity":1,"message":"220","line":13,"column":12,"nodeType":"197","messageId":"198","endLine":13,"endColumn":21},{"ruleId":"195","severity":1,"message":"221","line":14,"column":12,"nodeType":"197","messageId":"198","endLine":14,"endColumn":24},{"ruleId":"199","severity":1,"message":"222","line":19,"column":8,"nodeType":"201","endLine":19,"endColumn":10,"suggestions":"223"},{"ruleId":"195","severity":1,"message":"224","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":21},{"ruleId":"195","severity":1,"message":"225","line":2,"column":37,"nodeType":"197","messageId":"198","endLine":2,"endColumn":42},{"ruleId":"195","severity":1,"message":"226","line":24,"column":12,"nodeType":"197","messageId":"198","endLine":24,"endColumn":24},{"ruleId":"195","severity":1,"message":"227","line":25,"column":12,"nodeType":"197","messageId":"198","endLine":25,"endColumn":21},{"ruleId":"195","severity":1,"message":"228","line":28,"column":24,"nodeType":"197","messageId":"198","endLine":28,"endColumn":37},{"ruleId":"195","severity":1,"message":"229","line":28,"column":50,"nodeType":"197","messageId":"198","endLine":28,"endColumn":62},{"ruleId":"195","severity":1,"message":"230","line":37,"column":26,"nodeType":"197","messageId":"198","endLine":37,"endColumn":41},{"ruleId":"199","severity":1,"message":"231","line":89,"column":8,"nodeType":"201","endLine":89,"endColumn":10,"suggestions":"232"},{"ruleId":"199","severity":1,"message":"233","line":95,"column":8,"nodeType":"201","endLine":95,"endColumn":19,"suggestions":"234"},{"ruleId":"199","severity":1,"message":"235","line":102,"column":8,"nodeType":"201","endLine":102,"endColumn":19,"suggestions":"236"},{"ruleId":"195","severity":1,"message":"237","line":21,"column":11,"nodeType":"197","messageId":"198","endLine":21,"endColumn":22},{"ruleId":"189","replacedBy":"238"},{"ruleId":"191","replacedBy":"239"},{"ruleId":"195","severity":1,"message":"196","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":12},{"ruleId":"199","severity":1,"message":"240","line":17,"column":8,"nodeType":"201","endLine":17,"endColumn":10,"suggestions":"241"},{"ruleId":"195","severity":1,"message":"242","line":7,"column":12,"nodeType":"197","messageId":"198","endLine":7,"endColumn":21},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],"@typescript-eslint/no-unused-vars","'test' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setTimerModel' and 'timerModel'. Either include them or remove the dependency array.","ArrayExpression",["245"],"React Hook useEffect has a missing dependency: 'setTimerView'. Either include it or remove the dependency array.",["246"],"no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"247","text":"248"},"'Props' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["243"],["244"],"'PieGraph' is defined but never used.","'BarGraph' is defined but never used.","'Total' is defined but never used.","'chartData' is assigned a value but never used.","'chartOptions' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'testData' and 'testOptions'. Either include them or remove the dependency array.",["249"],"'Card' is defined but never used.","'Image' is defined but never used.","'filterParams' is assigned a value but never used.","'timerView' is assigned a value but never used.","'setTimerModel' is assigned a value but never used.","'setTimerView' is assigned a value but never used.","'setFilterParams' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getData' and 'props.isType'. Either include them or remove the dependency array. If 'setFilterType' needs the current value of 'props.isType', you can also switch to useReducer instead of useState and read 'props.isType' in the reducer.",["250"],"React Hook useEffect has missing dependencies: 'filterParams.client' and 'filterParams.user'. Either include them or remove the dependency array.",["251"],"React Hook useEffect has missing dependencies: 'filterOptions', 'filterParams', and 'timerModel'. Either include them or remove the dependency array.",["252"],"'changeEvent' is assigned a value but never used.",["243"],["244"],"React Hook useEffect has a missing dependency: 'fetched'. Either include it or remove the dependency array.",["253"],"'timerData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},[1664,1675],"",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},"Update the dependencies array to be: [setTimerModel, timerModel]",{"range":"268","text":"269"},"Update the dependencies array to be: [setTimerView, timerModel]",{"range":"270","text":"271"},"Update the dependencies array to be: [testData, testOptions]",{"range":"272","text":"273"},"Update the dependencies array to be: [getData, props.isType]",{"range":"274","text":"275"},"Update the dependencies array to be: [filterParams.client, filterParams.user, timerView]",{"range":"276","text":"277"},"Update the dependencies array to be: [filterOptions, filterParams, timerModel, timerView]",{"range":"278","text":"279"},"Update the dependencies array to be: [fetched]",{"range":"280","text":"281"},[1520,1522],"[setTimerModel, timerModel]",[1588,1600],"[setTimerView, timerModel]",[746,748],"[testData, testOptions]",[2890,2892],"[getData, props.isType]",[3006,3017],"[filterParams.client, filterParams.user, timerView]",[3245,3256],"[filterOptions, filterParams, timerModel, timerView]",[566,568],"[fetched]"]